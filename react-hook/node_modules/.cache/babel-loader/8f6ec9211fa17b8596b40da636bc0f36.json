{"ast":null,"code":"var _jsxFileName = \"/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js\";\nimport React, { useState, useEffect } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  useEffect(() => {\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.json').then(response => response.json()).then(responseData => {\n      let loadIngrediants = [];\n\n      for (let key in responseData) {\n        loadIngrediants.push({\n          id: key,\n          title: responseData[key].title,\n          amount: responseData[key].amount\n        });\n      }\n\n      setUserIngredients(loadIngrediants);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('RENDER INGREDIEANTS', userIngredients);\n  }, [userIngredients]);\n\n  const addIngredientHandler = ingredient => {\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = id => {\n    const newIngredients = [...userIngredients];\n    const updateIngrediente = newIngredients.filter(ig => ig.id !== id);\n    setUserIngredients(updateIngrediente);\n  };\n\n  const loadIngrediantsHandler = ingredients => {\n    setUserIngredients(ingredients);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngrediant: addIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: loadIngrediantsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js"],"names":["React","useState","useEffect","IngredientForm","IngredientList","Search","Ingredients","userIngredients","setUserIngredients","fetch","then","response","json","responseData","loadIngrediants","key","push","id","title","amount","console","log","addIngredientHandler","ingredient","method","body","JSON","stringify","headers","prevIngredients","name","removeIngredientHandler","newIngredients","updateIngrediente","filter","ig","loadIngrediantsHandler","ingredients"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList'\nimport Search from './Search';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([])\n\n  useEffect(() => {\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.json')\n      .then(response => response.json())\n      .then(responseData => {\n        let loadIngrediants = [];\n        for (let key in responseData) {\n          loadIngrediants.push({\n            id: key,\n            title: responseData[key].title,\n            amount: responseData[key].amount\n          });\n        }\n        setUserIngredients(loadIngrediants);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log('RENDER INGREDIEANTS', userIngredients);\n  }, [userIngredients]);\n\n\n  const addIngredientHandler = ingredient => {\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [\n        ...prevIngredients,\n        { id: responseData.name, ...ingredient }])\n    });\n  }\n\n  const removeIngredientHandler = id => {\n    const newIngredients = [...userIngredients]\n    const updateIngrediente = newIngredients.filter(ig => ig.id !== id)\n    setUserIngredients(updateIngrediente)\n  }\n\n  const loadIngrediantsHandler = ingredients => {\n    setUserIngredients(ingredients);\n  }\n\n  return (\n    <div className=\"App\">\n      <IngredientForm onAddIngrediant={addIngredientHandler} />\n\n      <section>\n        <Search onLoadIngredients={loadIngrediantsHandler} />\n        <IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler} />\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}