{"ast":null,"code":"var _jsxFileName = \"/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useEffect, useCallback, useMemo } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\nimport useHttp from '../../hooks/http';\n\nconst ingredientReducer = (currentState, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentState, action.ingredient];\n\n    case 'DELETE':\n      return currentState.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('Something was wrong!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    extra,\n    identified\n  } = useHttp(); //const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (identified === 'DELETE-INGREDIENT') {\n      dispatch({\n        type: 'DELETE',\n        id: extra\n      });\n    } else {\n      dispatch({\n        type: 'ADD',\n        ingredient: {\n          id: data.name,\n          ...ingredient\n        }\n      });\n    }\n  }, [data, extra, identified]);\n  const addIngredientHandler = useCallback(ingredient => {\n    sendRequest('https://gcamou-green-market.firebaseio.com/ingredients.json', 'POST', JSON.stringify(ingredients), null, 'ADD-INGREDIENT'); // setIsLoading(true);\n    // dispatchError({ type: 'SEND' })\n    // fetch('https://gcamou-green-market.firebaseio.com/ingredients.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify(ingredient),\n    //   headers: { 'Content-Type': 'application/json' }\n    // }).then(response => {\n    //   // setIsLoading(false);\n    //   // dispatchError({ type: 'RESPONSE' });\n    //   return response.json();\n    // }).then(responseData => {\n    //   dispatch(\n    //     {\n    //       type: 'ADD',\n    //       ingredient: {\n    //         id: responseData.name,\n    //         ...ingredient\n    //       }\n    //     });\n    //   //  setUserIngredients(prevIngredients => [\n    //   //    ...prevIngredients,\n    //   //    { id: responseData.name, ...ingredient }])\n    // }).catch(err => {\n    //   console.log(err);\n    //   // setError('Something was wrong!');\n    //   // setIsLoading(false);\n    //   // dispatchError({ type: 'ERROR', error: 'Something was wrong!' });\n    // });\n  }, []);\n  const removeIngredientHandler = useCallback(id => {\n    sendRequest(`https://gcamou-green-market.firebaseio.com/ingredients/${id}.json`, 'DELETE', null, id, 'DELETE-INGREDIENT'); //setIsLoading(true);\n    // dispatchError({ type: 'SEND' });\n    //            , {\n  }, []);\n  const loadIngrediantsHandler = useCallback(ingredients => {\n    dispatch({\n      type: 'SET',\n      ingredients: ingredients\n    }); // setUserIngredients(ingredients);\n  }, []);\n  const closeModalHandler = useCallback(() => {// setError(null);\n    // dispatchError({ type: 'CLEAR' })\n  }, []);\n  const ingredientList = useMemo(() => {\n    return /*#__PURE__*/React.createElement(IngredientList, {\n      ingredients: userIngredients,\n      onRemoveItem: removeIngredientHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    });\n  }, [userIngredients, removeIngredientHandler]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: closeModalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngrediant: addIngredientHandler,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: loadIngrediantsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), ingredientList));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js"],"names":["React","useReducer","useEffect","useCallback","useMemo","IngredientForm","IngredientList","Search","ErrorModal","useHttp","ingredientReducer","currentState","action","type","ingredients","ingredient","filter","ing","id","Error","Ingredients","userIngredients","dispatch","isLoading","error","data","sendRequest","extra","identified","name","addIngredientHandler","JSON","stringify","removeIngredientHandler","loadIngrediantsHandler","closeModalHandler","ingredientList"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useCallback, useMemo } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList'\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\n\nimport useHttp from '../../hooks/http';\n\nconst ingredientReducer = (currentState, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentState, action.ingredient];\n    case 'DELETE':\n      return currentState.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Something was wrong!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const { isLoading, error, data, sendRequest, extra, identified } = useHttp();\n  //const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (identified === 'DELETE-INGREDIENT') {\n      dispatch({ type: 'DELETE', id: extra });\n    } else {\n      dispatch({\n        type: 'ADD',\n        ingredient: {\n          id: data.name,\n          ...ingredient\n        }\n      });\n    }\n  }, [data, extra, identified]);\n\n\n  const addIngredientHandler = useCallback(ingredient => {\n    sendRequest(\n      'https://gcamou-green-market.firebaseio.com/ingredients.json',\n      'POST',\n      JSON.stringify(ingredients),\n      null,\n      'ADD-INGREDIENT'\n    );\n    // setIsLoading(true);\n    // dispatchError({ type: 'SEND' })\n    // fetch('https://gcamou-green-market.firebaseio.com/ingredients.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify(ingredient),\n    //   headers: { 'Content-Type': 'application/json' }\n    // }).then(response => {\n    //   // setIsLoading(false);\n    //   // dispatchError({ type: 'RESPONSE' });\n    //   return response.json();\n    // }).then(responseData => {\n    //   dispatch(\n    //     {\n    //       type: 'ADD',\n    //       ingredient: {\n    //         id: responseData.name,\n    //         ...ingredient\n    //       }\n    //     });\n    //   //  setUserIngredients(prevIngredients => [\n    //   //    ...prevIngredients,\n    //   //    { id: responseData.name, ...ingredient }])\n    // }).catch(err => {\n    //   console.log(err);\n    //   // setError('Something was wrong!');\n    //   // setIsLoading(false);\n    //   // dispatchError({ type: 'ERROR', error: 'Something was wrong!' });\n    // });\n  }, []);\n\n  const removeIngredientHandler = useCallback(id => {\n    sendRequest(\n      `https://gcamou-green-market.firebaseio.com/ingredients/${id}.json`,\n      'DELETE',\n      null,\n      id,\n      'DELETE-INGREDIENT');\n    //setIsLoading(true);\n    // dispatchError({ type: 'SEND' });\n    //            , {\n\n  }, []);\n\n  const loadIngrediantsHandler = useCallback(ingredients => {\n    dispatch({ type: 'SET', ingredients: ingredients });\n    // setUserIngredients(ingredients);\n  }, []);\n\n  const closeModalHandler = useCallback(() => {\n    // setError(null);\n    // dispatchError({ type: 'CLEAR' })\n  }, []);\n\n  const ingredientList = useMemo(() => {\n    return (<IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler} />);\n  }, [userIngredients, removeIngredientHandler]);\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={closeModalHandler}>{error}</ErrorModal>}\n      <IngredientForm onAddIngrediant={addIngredientHandler} isLoading={isLoading} />\n\n      <section>\n        <Search onLoadIngredients={loadIngrediantsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}