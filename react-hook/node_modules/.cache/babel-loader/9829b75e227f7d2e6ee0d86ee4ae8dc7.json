{"ast":null,"code":"var _jsxFileName = \"/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js\";\nimport React, { useState, useReducer, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst ingredientReducer = (currentState, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentState.ingredients, action.ingredient];\n\n    case 'DELETE':\n      return currentState.filter(ing => ing.id !== action.id);\n\n    default:\n      return new error('Something was wrong!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []); //const [userIngredients, setUserIngredients] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('RENDER INGREDIEANTS', userIngredients);\n  }, [userIngredients]);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      dispatch({\n        type: 'ADD',\n        ingredients: [...prevIngredients, {\n          id: responseData.name,\n          ...ingredient\n        }]\n      }); //  setUserIngredients(prevIngredients => [\n      //    ...prevIngredients,\n      //    { id: responseData.name, ...ingredient }])\n    }).catch(err => {\n      setError('Something was wrong!');\n      setIsLoading(false);\n    });\n  };\n\n  const removeIngredientHandler = id => {\n    setIsLoading(true);\n    fetch(`https://gcamou-green-market.firebaseio.com/ingredients/${id}.json`, {\n      method: 'DELETE'\n    }).then(() => {\n      setIs;\n      Loading(false);\n      dispatch({\n        type: 'DELETE',\n        id: id\n      }); // setUserIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== id))\n    }).catch(err => {\n      setError('Something was wrong!');\n      setIsLoading(false);\n    });\n  };\n\n  const loadIngrediantsHandler = useCallback(ingredients => {\n    dispatch({\n      type: 'SET',\n      ingredients: ingredients\n    }); // setUserIngredients(ingredients);\n  }, []);\n\n  const closeModalHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: closeModalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngrediant: addIngredientHandler,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: loadIngrediantsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js"],"names":["React","useState","useReducer","useEffect","useCallback","IngredientForm","IngredientList","Search","ErrorModal","ingredientReducer","currentState","action","type","ingredients","ingredient","filter","ing","id","error","Ingredients","userIngredients","dispatch","isLoading","setIsLoading","setError","console","log","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevIngredients","name","catch","err","removeIngredientHandler","setIs","Loading","loadIngrediantsHandler","closeModalHandler"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList'\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst ingredientReducer = (currentState, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentState.ingredients, action.ingredient];\n    case 'DELETE':\n      return currentState.filter(ing => ing.id !== action.id);\n    default:\n      return new error('Something was wrong!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  //const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log('RENDER INGREDIEANTS', userIngredients);\n  }, [userIngredients]);\n\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      dispatch(\n        {\n          type: 'ADD',\n          ingredients: [\n            ...prevIngredients,\n            {\n              id: responseData.name,\n              ...ingredient\n            }\n          ]\n        });\n      //  setUserIngredients(prevIngredients => [\n      //    ...prevIngredients,\n      //    { id: responseData.name, ...ingredient }])\n    }).catch(err => {\n      setError('Something was wrong!');\n      setIsLoading(false);\n    });\n  }\n\n  const removeIngredientHandler = id => {\n    setIsLoading(true);\n    fetch(`https://gcamou-green-market.firebaseio.com/ingredients/${id}.json`, {\n      method: 'DELETE'\n    }).then(() => {\n      setIs\n      Loading(false);\n      dispatch({ type: 'DELETE', id: id });\n      // setUserIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== id))\n    }).catch(err => {\n      setError('Something was wrong!');\n      setIsLoading(false);\n    });\n  }\n\n  const loadIngrediantsHandler = useCallback(ingredients => {\n    dispatch({ type: 'SET', ingredients: ingredients });\n    // setUserIngredients(ingredients);\n  }, []);\n\n  const closeModalHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={closeModalHandler}>{error}</ErrorModal>}\n      <IngredientForm onAddIngrediant={addIngredientHandler} isLoading={isLoading} />\n\n      <section>\n        <Search onLoadIngredients={loadIngrediantsHandler} />\n        <IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler} />\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}