{"ast":null,"code":"var _jsxFileName = \"/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Search.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/http';\nimport Card from '../UI/Card';\nimport ErrorModal from '../UI/ErrorModal';\nimport './Search.css';\nconst Search = React.memo(props => {\n  const {\n    onLoadIngredients\n  } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    extra,\n    identified,\n    clear\n  } = useHttp();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length <= 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        sendRequest('https://gcamou-green-market.firebaseio.com/ingredients.json' + query, 'GET');\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, inputRef, sendRequest]);\n  useEffect(() => {\n    let loadIngrediants = [];\n\n    for (let key in data) {\n      loadIngrediants.push({\n        id: key,\n        title: data[key].title,\n        amount: data[key].amount\n      });\n    }\n\n    onLoadIngredients(loadIngrediants);\n  }, [data, isLoading, error, onLoadIngredients]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Filter by Title\"), isLoading && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    value: enteredFilter,\n    onChange: event => {\n      setEnteredFilter(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default Search;","map":{"version":3,"sources":["/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Search.js"],"names":["React","useState","useEffect","useRef","useHttp","Card","ErrorModal","Search","memo","props","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","isLoading","error","data","sendRequest","extra","identified","clear","timer","setTimeout","current","value","query","length","clearTimeout","loadIngrediants","key","push","id","title","amount","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAGP,KAAK,CAACQ,IAAN,CAAWC,KAAK,IAAI;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAA9B;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMY,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAM;AAAEW,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA,UAA9C;AAA0DC,IAAAA;AAA1D,MAAoEhB,OAAO,EAAjF;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7B,UAAIX,aAAa,KAAKE,QAAQ,CAACU,OAAT,CAAiBC,KAAvC,EAA8C;AAC5C,cAAMC,KAAK,GAAGd,aAAa,CAACe,MAAd,IAAwB,CAAxB,GACV,EADU,GAET,6BAA4Bf,aAAc,GAF/C;AAGAM,QAAAA,WAAW,CACT,gEAAgEQ,KADvD,EAET,KAFS,CAAX;AAID;AACF,KAVuB,EAUrB,GAVqB,CAAxB;AAWA,WAAO,MAAM;AACXE,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACD,KAFD;AAGD,GAfQ,EAeN,CAACV,aAAD,EAAgBE,QAAhB,EAA0BI,WAA1B,CAfM,CAAT;AAiBAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,eAAe,GAAG,EAAtB;;AACA,SAAK,IAAIC,GAAT,IAAgBb,IAAhB,EAAsB;AACpBY,MAAAA,eAAe,CAACE,IAAhB,CAAqB;AACnBC,QAAAA,EAAE,EAAEF,GADe;AAEnBG,QAAAA,KAAK,EAAEhB,IAAI,CAACa,GAAD,CAAJ,CAAUG,KAFE;AAGnBC,QAAAA,MAAM,EAAEjB,IAAI,CAACa,GAAD,CAAJ,CAAUI;AAHC,OAArB;AAKD;;AACDvB,IAAAA,iBAAiB,CAACkB,eAAD,CAAjB;AACD,GAVQ,EAUN,CAACZ,IAAD,EAAOF,SAAP,EAAkBC,KAAlB,EAAyBL,iBAAzB,CAVM,CAAT;AAYA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,iBAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEK,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,KAA7B,CADZ,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGD,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFhB,eAGE;AACE,IAAA,GAAG,EAAED,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,aAHT;AAIE,IAAA,QAAQ,EAAEuB,KAAK,IAAI;AAAEtB,MAAAA,gBAAgB,CAACsB,KAAK,CAACC,MAAN,CAAaX,KAAd,CAAhB;AAAsC,KAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAFF,CADF;AAgBD,CApDc,CAAf;AAsDA,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport useHttp from '../../hooks/http';\n\nimport Card from '../UI/Card';\nimport ErrorModal from '../UI/ErrorModal';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const { isLoading, error, data, sendRequest, extra, identified, clear } = useHttp();\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query = enteredFilter.length <= 0\n          ? ''\n          : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        sendRequest(\n          'https://gcamou-green-market.firebaseio.com/ingredients.json' + query,\n          'GET'\n        );\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, inputRef, sendRequest]);\n\n  useEffect(() => {\n    let loadIngrediants = [];\n    for (let key in data) {\n      loadIngrediants.push({\n        id: key,\n        title: data[key].title,\n        amount: data[key].amount\n      });\n    }\n    onLoadIngredients(loadIngrediants);\n  }, [data, isLoading, error, onLoadIngredients]);\n\n  return (\n    <section className=\"search\">\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          {isLoading && <span>Loading...</span>}\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => { setEnteredFilter(event.target.value) }} />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}