{"ast":null,"code":"var _jsxFileName = \"/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js\";\nimport React, { useState, useReducer, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst ingredientReducer = (currentState, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...currentState, action.ingredient];\n\n    case 'DELETE':\n      return currentState.filter(ing => ing.id !== action.id);\n\n    default:\n      throw new Error('Something was wrong!');\n  }\n};\n\nconst httpReducer = (currentHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        isLoading: true,\n        error: null\n      };\n\n    case 'RESPONSE':\n      return { ...currentHttpState,\n        isLoading: false\n      };\n\n    case 'ERROR':\n      return {\n        isLoading: false,\n        error: action.error\n      };\n\n    case 'CLEAR':\n      return { ...currentHttpState,\n        error: null\n      };\n\n    default:\n      throw new Error('Something was wrong!');\n  }\n};\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const [userHttpState, dispatchError] = useReducer(httpReducer, {\n    isLoading: false,\n    error: null\n  }); //const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log('RENDER INGREDIEANTS', userIngredients);\n  }, [userIngredients]);\n\n  const addIngredientHandler = ingredient => {\n    // setIsLoading(true);\n    dispatchError({\n      type: 'SEND'\n    });\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.jsn', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      // setIsLoading(false);\n      dispatchError({\n        type: 'RESPONSE'\n      });\n      return response.json();\n    }).then(responseData => {\n      dispatch({\n        type: 'ADD',\n        ingredient: {\n          id: responseData.name,\n          ...ingredient\n        }\n      }); //  setUserIngredients(prevIngredients => [\n      //    ...prevIngredients,\n      //    { id: responseData.name, ...ingredient }])\n    }).catch(err => {\n      console.log(err); // setError('Something was wrong!');\n      // setIsLoading(false);\n\n      dispatchError({\n        type: 'ERROR',\n        error: 'Something was wrong!'\n      });\n    });\n  };\n\n  const removeIngredientHandler = id => {\n    //setIsLoading(true);\n    dispatchError({\n      type: 'SEND'\n    });\n    fetch(`https://gcamou-green-market.firebaseio.com/ingredients/${id}.json`, {\n      method: 'DELETE'\n    }).then(() => {\n      // setIsLoading(false);\n      dispatchError({\n        type: 'RESPONSE'\n      });\n      dispatch({\n        type: 'DELETE',\n        id: id\n      }); // setUserIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== id))\n    }).catch(err => {\n      // setError('Something was wrong!');\n      // setIsLoading(false);\n      dispatchError({\n        type: 'ERROR',\n        error: err\n      });\n    });\n  };\n\n  const loadIngrediantsHandler = useCallback(ingredients => {\n    dispatch({\n      type: 'SET',\n      ingredients: ingredients\n    }); // setUserIngredients(ingredients);\n  }, []);\n\n  const closeModalHandler = () => {\n    // setError(null);\n    dispatchError({\n      type: 'RESPONSE'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, userHttpState.error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: closeModalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }\n  }, userHttpState.error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngrediant: addIngredientHandler,\n    isLoading: userHttpState.isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: loadIngrediantsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Volumes/gCamouInc/Dev/Projects/Trainning/React/react-hook/src/components/Ingredients/Ingredients.js"],"names":["React","useState","useReducer","useEffect","useCallback","IngredientForm","IngredientList","Search","ErrorModal","ingredientReducer","currentState","action","type","ingredients","ingredient","filter","ing","id","Error","httpReducer","currentHttpState","isLoading","error","Ingredients","userIngredients","dispatch","userHttpState","dispatchError","console","log","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","name","catch","err","removeIngredientHandler","loadIngrediantsHandler","closeModalHandler"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList'\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst ingredientReducer = (currentState, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentState, action.ingredient];\n    case 'DELETE':\n      return currentState.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Something was wrong!');\n  }\n};\n\nconst httpReducer = (currentHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return { isLoading: true, error: null };\n    case 'RESPONSE':\n      return { ...currentHttpState, isLoading: false };\n    case 'ERROR':\n      return { isLoading: false, error: action.error };\n    case 'CLEAR':\n      return { ...currentHttpState, error: null };\n    default:\n      throw new Error('Something was wrong!');\n  }\n}\n\nconst Ingredients = () => {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const [userHttpState, dispatchError] = useReducer(httpReducer,\n    {\n      isLoading: false,\n      error: null\n    });\n  //const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log('RENDER INGREDIEANTS', userIngredients);\n  }, [userIngredients]);\n\n\n  const addIngredientHandler = ingredient => {\n    // setIsLoading(true);\n    dispatchError({ type: 'SEND' })\n    fetch('https://gcamou-green-market.firebaseio.com/ingredients.jsn', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    }).then(response => {\n      // setIsLoading(false);\n      dispatchError({ type: 'RESPONSE' });\n      return response.json();\n    }).then(responseData => {\n      dispatch(\n        {\n          type: 'ADD',\n          ingredient: {\n            id: responseData.name,\n            ...ingredient\n          }\n        });\n      //  setUserIngredients(prevIngredients => [\n      //    ...prevIngredients,\n      //    { id: responseData.name, ...ingredient }])\n    }).catch(err => {\n      console.log(err);\n      // setError('Something was wrong!');\n      // setIsLoading(false);\n      dispatchError({ type: 'ERROR', error: 'Something was wrong!' });\n    });\n  }\n\n  const removeIngredientHandler = id => {\n    //setIsLoading(true);\n    dispatchError({ type: 'SEND' });\n    fetch(`https://gcamou-green-market.firebaseio.com/ingredients/${id}.json`, {\n      method: 'DELETE'\n    }).then(() => {\n      // setIsLoading(false);\n      dispatchError({ type: 'RESPONSE' });\n      dispatch({ type: 'DELETE', id: id });\n      // setUserIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== id))\n    }).catch(err => {\n      // setError('Something was wrong!');\n      // setIsLoading(false);\n      dispatchError({ type: 'ERROR', error: err });\n    });\n  }\n\n  const loadIngrediantsHandler = useCallback(ingredients => {\n    dispatch({ type: 'SET', ingredients: ingredients });\n    // setUserIngredients(ingredients);\n  }, []);\n\n  const closeModalHandler = () => {\n    // setError(null);\n    dispatchError({ type: 'RESPONSE' })\n  };\n\n  return (\n    <div className=\"App\">\n      {userHttpState.error && <ErrorModal onClose={closeModalHandler}>{userHttpState.error}</ErrorModal>}\n      <IngredientForm onAddIngrediant={addIngredientHandler} isLoading={userHttpState.isLoading} />\n\n      <section>\n        <Search onLoadIngredients={loadIngrediantsHandler} />\n        <IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler} />\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}